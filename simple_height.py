# -*- coding: utf-8 -*-
"""simple_height.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12-R2-ZgOxGkOp06yO_lTBTpQBmzbI_H_
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error,mean_absolute_percentage_error,mean_squared_error,r2_score

df=pd.read_csv('/content/height_weight.csv')
print(df.head())
print('*'*50)
print(df.tail())

df.describe()

df.isna().sum()

x=df.iloc[:,:-1].values
y=df.iloc[:,-1].values
xtr,xts,ytr,yts=train_test_split(x,y,test_size=0.30,random_state=42)

plt.scatter(x,y)
plt.xlabel('height')
plt.ylabel('Weight')
plt.title('Height-Weight graph')

model=LinearRegression()
model.fit(xtr,ytr)
ypr=model.predict(xts)

df1=pd.DataFrame({'actual':yts,'predicted':ypr,'difference':yts-ypr})
df1

plt.scatter(xtr,ytr)
plt.plot(xts,ypr,color='r')

# y=mx+c
print('slope is ',model.coef_)
print('constant is ',model.intercept_)

# mean absolute error
print('MAE is',mean_absolute_error(yts,ypr))

# mean absolute error percentage
print('MAE percentage is ',mean_absolute_percentage_error(yts,ypr))

# mean squared error
print('mse is ',mean_squared_error(yts,ypr))

# rmse
rmse=np.sqrt(mean_squared_error(yts,ypr))
print('RMSE is ',rmse)

#r2 score
print('r2 score ',r2_score(yts,ypr))